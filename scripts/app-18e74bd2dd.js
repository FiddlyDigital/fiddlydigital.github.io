!function(){"use strict";var e=["databaseDocumentModelFactory",function(e){return e.getDatabaseList()}],t=["$route","databaseDocumentModelFactory",function(e,t){var a=t;return a.getDatabaseList().then(function(){return e.current.params.dbName!==a.getSelectedDatabaseName()&&a.setSelectedDatabase(e.current.params.dbName),a.getSelectedDatabase()})}];angular.module("dbdocreader",["ngRoute","route-segment","view-segment","ngMaterial","md.data.table","chart.js","dbdocreader.services"]).config(["$mdThemingProvider",function(e){e.theme("default").primaryPalette("teal").accentPalette("teal"),e.enableBrowserColor({theme:"default",palette:"primary",hue:800})}]).config(["$routeSegmentProvider",function(a){a.when("/","databaseSelector").when("/:dbName","database").when("/:dbName/tables","database.tables").when("/:dbName/tables/:tableName","database.table").when("/:dbName/views","database.views").when("/:dbName/views/:viewName","database.view").when("/:dbName/storedprocedures","database.storedprocedures").when("/:dbName/storedprocedures/:procedureName","database.storedprocedure").when("/:dbName/functions","database.functions").when("/:dbName/functions/:functionName","database.function").when("/:dbName/objects/:objectId","database.object").segment("databaseSelector",{"default":!0,templateUrl:"routeViews/databaseList.html",resolve:{databaseList:e}}).segment("database",{templateUrl:"routeViews/layout.html",controller:"databaseViewController as vm",resolve:{database:t}}).within().segment("index",{"default":!0,controller:"databaseViewController as vm",templateUrl:"routeViews/database.html",resolve:{database:t}}).segment("tables",{templateUrl:"routeViews/dbTables/dbTablesList.html"}).segment("table",{templateUrl:"routeViews/dbTables/dbTable.html",dependencies:["tableName"],controller:"dbTableController as vm",resolve:{database:t}}).segment("views",{templateUrl:"routeViews/dbViews/dbViewsList.html"}).segment("view",{templateUrl:"routeViews/dbViews/dbView.html",dependencies:["viewName"],controller:"dbViewController as vm",resolve:{database:t}}).segment("storedprocedures",{templateUrl:"routeViews/dbProcedures/dbProceduresList.html"}).segment("storedprocedure",{templateUrl:"routeViews/dbProcedures/dbProcedure.html",dependencies:["procedureName"],controller:"dbProcedureController as vm",resolve:{database:t}}).segment("functions",{templateUrl:"routeViews/dbFunctions/dbFunctionsList.html"}).segment("function",{templateUrl:"routeViews/dbFunctions/dbFunction.html",dependencies:["functionName"],controller:"dbFunctionController as vm",resolve:{database:t}}).segment("object",{controller:"dbObjectRedirectController as ctrl",dependencies:["objectId"],resolve:{database:t}})}])}(),function(){"use strict";function e(e,t,a){function n(e,t){d.databaseName=e.Name,t.$routeParams.viewName&&angular.forEach(e.Views,function(e){e.FullName===t.$routeParams.viewName&&(d.selectedView=e)})}function r(e){a.hash(e)}var d=this;d.databaseName=null,d.selectedView=null,d.scrollTo=r,d.dtPropertiesTitle="Properties",d.dtPropertiesNames=["Property","Value"],d.dtColumnsTitle="Columns",d.dtColumnsNames=["Name","ColType","MaxLength","Precision","Scale","IsNullable","Description"],d.dtIndexesTitle="Indexes",d.dtIndexesNames=["Name","Description","Columns","IncludedColumns"],d.dtSQLTitle="SQL Script",d.dtSQLNames=[],d.dtUsesTitle="Uses",d.dtUsesNames=["Link","DatabaseName","SchemaName","EntityName","MinorName","IsCallerDependent","IsAmbiguous"],d.dtUsedByTitle="Used By",d.dtUsedByNames=["Link","SchemaName","EntityName","ClassDescription","IsCallerDependent"],n(e,t)}angular.module("dbdocreader").controller("dbViewController",e),e.$inject=["database","$routeSegment","$location"]}(),function(){"use strict";function e(e,t,a){function n(e,t){d.databaseName=e.Name,t.$routeParams.tableName&&angular.forEach(e.Tables,function(e){e.FullName===t.$routeParams.tableName&&(d.selectedTable=e)})}function r(e){a.hash(e)}var d=this;d.databaseName=null,d.selectedTable=null,d.scrollTo=r,d.dtPropertiesTitle="Properties",d.dtPropertiesNames=["Property","Value"],d.dtColumnsTitle="Columns",d.dtColumnsNames=["Name","ColType","MaxLength","Precision","Scale","IsNullable","Description"],d.dtIndexesTitle="Indexes",d.dtIndexesNames=["Name","Description","Columns","IncludedColumns"],d.dtTriggersTitle="Triggers",d.dtTriggerNames=["Name","ClassName","MethodName","IsInsert","IsUpdate","IsDelete","IsInsteadOf","TextHeader","TextBody","IsEnabled"],d.dtSQLTitle="SQL Script",d.dtSQLNames=[],d.dtUsesTitle="Uses",d.dtUsesNames=["Link","DatabaseName","SchemaName","EntityName","MinorName","IsCallerDependent","IsAmbiguous"],d.dtUsedByTitle="Used By",d.dtUsedByNames=["Link","SchemaName","EntityName","ClassDescription","IsCallerDependent"],n(e,t)}angular.module("dbdocreader").controller("dbTableController",e),e.$inject=["database","$routeSegment","$location"]}(),function(){"use strict";function e(e,t,a){function n(e,t){d.databaseName=e.Name,t.$routeParams.procedureName&&angular.forEach(e.Programmability.StoredProcedures,function(e){e.FullName===t.$routeParams.procedureName&&(d.selectedProcedure=e)})}function r(e){a.hash(e)}var d=this;d.databaseName=null,d.selectedProcedure=null,d.scrollTo=r,d.dtPropertiesTitle="Properties",d.dtPropertiesNames=["Property","Value"],d.dtParametersTitle="Parameters",d.dtParametersNames=["Name","DataType","MaxLength","InOrOut","Description"],d.dtSQLTitle="SQL Script",d.dtSQLNames=[],d.dtUsesTitle="Uses",d.dtUsesNames=["Link","DatabaseName","SchemaName","EntityName","MinorName","IsCallerDependent","IsAmbiguous"],d.dtUsedByTitle="Used By",d.dtUsedByNames=["Link","SchemaName","EntityName","ClassDescription","IsCallerDependent"],n(e,t)}angular.module("dbdocreader").controller("dbProcedureController",e),e.$inject=["database","$routeSegment","$location"]}(),function(){"use strict";function e(e,t,a){function n(e,t){var a=e.ObjectIndex[t.$routeParams.objectId];a?r(a):console.log("Can't redirect.")}function r(e){a.path(e)}n(e,t)}angular.module("dbdocreader").controller("dbObjectRedirectController",e),e.$inject=["database","$routeSegment","$location"]}(),function(){"use strict";function e(e,t){function a(e,t){n.databaseName=e.Name,t.$routeParams.functionName&&angular.forEach(e.Programmability.Functions,function(e){e.FullName===t.$routeParams.functionName&&(n.selectedFunction=e)})}var n=this;n.databaseName=null,n.selectedFunction=null,n.scrollTo=scrollTo,n.dtPropertiesTitle="Properties",n.dtPropertiesNames=["Property","Value"],n.dtParametersTitle="Parameters",n.dtParametersNames=["Name","DataType","MaxLength","InOrOut","Description"],n.dtSQLTitle="SQL Script",n.dtSQLNames=[],n.dtUsesTitle="Uses",n.dtUsesNames=["Link","DatabaseName","SchemaName","EntityName","MinorName","IsCallerDependent","IsAmbiguous"],n.dtUsedByTitle="Used By",n.dtUsedByNames=["Link","SchemaName","EntityName","ClassDescription","IsCallerDependent"],a(e,t)}angular.module("dbdocreader").controller("dbFunctionController",e),e.$inject=["database","$routeSegment"]}(),function(){"use strict";function e(e,t,a,n){function r(){e.get("sidebar")&&t("sidebar").toggle()}function d(e){n.path(e)}var s=this;s.selectedDbName=null,s.database=null,s.toggleSidebar=r,s.redirectTo=d,s.$doCheck=function(){var e=a.getSelectedDatabaseName();e!==s.selectedDbName&&(s.selectedDbName=e,a.getSelectedDatabase().then(function(e){s.database=e}))}}angular.module("dbdocreader").component("dbDocReader",{controller:e,controllerAs:"vm",templateUrl:"components/dbDocReader/dbDocReader.html"}),e.$inject=["$mdComponentRegistry","$mdSidenav","databaseDocumentModelFactory","$location"]}(),function(){"use strict";function e(e){var t=this;t.dataType="",t.truthyVals=["true","1"],t.falseyVals=["false","0"],t.$onInit=function(){t.rowData&&(t.dataType=Object.prototype.toString.call(t.rowData))},t.redirectTo=function(t){e.objectRedirect(t)}}function t(){return function(e){var t="";return t=e.replace(/([A-Z])/g," $1").trim(),t&&""!==t||(t="-"),t}}function a(){return function(e){var t=null;return null!==e&&angular.isDefined(e)&&(t=angular.isArray(e)?e.length>0?e.join(", "):"-":e),t&&""!==t||(t="-"),t}}angular.module("dbdocreader").component("datatable",{bindings:{title:"<",columnNames:"<",rowData:"<",replaceBoolWithIcon:"<",replaceLinkWithHref:"<",databaseName:"<"},controller:e,controllerAs:"vm",templateUrl:"components/datatable/datatable.html"}).filter("columnFormatter",t).filter("dataFormatter",a),e.$inject=["RedirectService"],t.$inject=[],a.$inject=[]}(),function(){"use strict";function e(e,t){function a(){t("sidebar").toggle()}function n(t,n){a(),e.path(r.database.Name+t+n)}var r=this;r.searchText="",r.showTableList=!0,r.toggleSidebar=a,r.selectSideBarItem=n,r.showTables=!0,r.showViews=!0,r.showProcedures=!0,r.showFunctions=!0,r.$onInit=function(){}}angular.module("dbdocreader").component("databaseTreeView",{bindings:{database:"="},controller:e,controllerAs:"vm",templateUrl:"components/databaseTreeView/databaseTreeView.html"}),e.$inject=["$location","$mdSidenav"]}(),function(){"use strict";function e(e,t,a){function n(n){t.hide(),e.setSelectedDatabase(n),a.path(n)}var r=this;r.dbList=null,r.selectDB=n,this.$onInit=function(){e.getDatabaseList().then(function(e){r.dbList=e,t.show({contentElement:"#dbSelectorDialog",parent:angular.element(document.body)})})}}angular.module("dbdocreader").component("databaseSelector",{controller:e,controllerAs:"vm",templateUrl:"components/databaseSelector/databaseSelector.html"}),e.$inject=["databaseDocumentModelFactory","$mdDialog","$location"]}(),function(){"use strict";angular.module("dbdocreader.services",[])}(),function(){"use strict";function e(e,t){function a(t){var a=t;e.getSelectedDatabase().then(function(e){var t=e.ObjectIndex[a];t?n(t):console.log("Can't redirect.")})}function n(e){t.path(e)}return{pathRedirectTo:n,objectRedirect:a}}angular.module("dbdocreader.services").factory("RedirectService",["databaseDocumentModelFactory","$location",e])}(),function(){"use strict";function e(e,t){function a(){var a=t.defer();if(o)a.resolve(o);else{var n=new Date;e({method:"GET",url:s+"manifest.json?"+n.getTime()}).then(function(e){o=e.data,a.resolve(o)},function(e){a.reject("Could not retrieve DatabaseList: "+e)})}return a.promise}function n(){return m}function r(){var a=t.defer();return l[m]?a.resolve(l[m]):e({method:"GET",url:s+o[m]}).then(function(e){e.data.Name||(e.data.Name=m),l[m]=e.data,a.resolve(l[m])},function(e){a.reject("Could not retrieve Database: "+e)}),a.promise}function d(e){m=e}var s="/data/",o=null,l={},m=null;return{getDatabaseList:a,setSelectedDatabase:d,getSelectedDatabaseName:n,getSelectedDatabase:r}}angular.module("dbdocreader.services").factory("databaseDocumentModelFactory",["$http","$q",e])}(),function(){"use strict";function e(e){function t(){a.database=e,a.dtCountsData.push({Type:"Table",Count:a.database.Tables.length}),a.dtCountsData.push({Type:"View",Count:a.database.Views.length}),a.dtCountsData.push({Type:"StoredProcedure",Count:a.database.Programmability.StoredProcedures.length}),a.dtCountsData.push({Type:"Function",Count:a.database.Programmability.Functions.length}),a.pieChartData=[a.database.Tables.length,a.database.Views.length,a.database.Programmability.StoredProcedures.length,a.database.Programmability.Functions.length]}var a=this;a.database=null,a.dtPropertiesNames=["Name","Value"],a.dtOptionsNames=[],a.dtCountsNames=["Type","Count"],a.dtCountsData=[],a.dtFilesNames=["FileId","GroupId","Size","MaxSize","Growth","Status","Perf","Name","FileName"],a.pieChartLabels=["Table","View","StoredProcedure","Function"],a.pieChartData=[],t()}angular.module("dbdocreader").controller("databaseViewController",e),e.$inject=["database"]}(),angular.module("dbdocreader").run(["$templateCache",function(e){e.put("index.html",'<!doctype html>\r\n<html>\r\n\r\n<head>\r\n    <base href="/">\r\n    <meta charset="utf-8">\r\n     <meta http-equiv="X-UA-Compatible" content="IE=edge">\r\n\r\n    <title>DBDoc Reader</title>\r\n\r\n    <meta name="description" content="">\r\n    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no">\r\n\r\n    <!-- build:css({.tmp,src}) styles/vendor-5b0d38abd5.css -->\r\n        <!-- bower:css -->\r\n            <!-- run `gulp inject` to automatically populate bower styles dependencies -->\r\n        <!-- endbower -->\r\n    <!-- endbuild -->\r\n\r\n    <!-- build:css({.tmp,src}) styles/app-a48c1dea49.css -->\r\n        <link rel="stylesheet" href="index.css">\r\n    <!-- endbuild -->\r\n</head>\r\n\r\n<body ng-app="dbdocreader">\r\n    <!--<db-doc-reader class="dbdocreader">\r\n    </db-doc-reader>-->\r\n\r\n    <div app-view-segment="0"></div>\r\n</body>\r\n\r\n<!-- build:js({.tmp,src}) scripts/vendor-5231b54bfd.js -->\r\n    <!-- bower:js -->\r\n        <!-- run `gulp inject` to automatically populate bower script dependencies -->\r\n    <!-- endbower -->\r\n<!-- endbuild -->\r\n\r\n<!-- build:js({.tmp,src}) scripts/app-18e74bd2dd.js -->\r\n    <!-- inject:js -->\r\n        <!-- js files will be automatically insert here -->\r\n    <!-- endinject -->\r\n\r\n    <!-- inject:partials -->\r\n        <!-- angular templates will be automatically converted in js and inserted here -->\r\n    <!-- endinject -->\r\n<!-- endbuild -->\r\n\r\n</html>'),e.put("routeViews/database.html",'<md-toolbar class="md-primary md-hue-2">\r\n    <div class="md-toolbar-tools">\r\n        <h3>\r\n            <md-icon md-font-set="material-icons" tooltip="Database">\r\n                storage\r\n            </md-icon>\r\n            \r\n            {{ vm.database.Name }}\r\n        </h3>\r\n    </div>\r\n</md-toolbar>\r\n\r\n<md-content layout-padding>\r\n    <div ng-show="vm.database.Files != null">\r\n        <span>\r\n            <strong>Files</strong>\r\n        </span>\r\n\r\n        <datatable column-names="vm.dtFilesNames" row-data="vm.database.Files">\r\n        </datatable>\r\n    </div>\r\n\r\n    <div layout="row">\r\n        <div flex="33">\r\n            <span>\r\n                <strong>Objects</strong>\r\n            </span>\r\n\r\n            <datatable column-names="vm.dtCountsNames" row-data="vm.dtCountsData">\r\n            </datatable>\r\n        </div>\r\n\r\n        <div flex="33">\r\n            <span>\r\n                <strong>Objects</strong>\r\n            </span>\r\n\r\n            <br>\r\n\r\n            <div>\r\n                <canvas id="bar" class="chart chart-bar" chart-data="vm.pieChartData" chart-labels="vm.pieChartLabels">\r\n                </canvas>\r\n            </div> \r\n        </div>\r\n\r\n        <div flex="33" ng-show="vm.database.Properties != null">\r\n            <span>\r\n                <strong>Properties</strong>\r\n            </span>\r\n\r\n            <datatable column-names="vm.dtPropertiesNames" row-data="vm.database.Properties" replace-bool-with-icon="true">\r\n            </datatable>\r\n        </div>\r\n    </div>\r\n</md-content>'),e.put("routeViews/databaseList.html","<database-selector>\r\n</database-selector>"),e.put("routeViews/layout.html",'<db-doc-reader class="dbdocreader">\r\n</db-doc-reader>'),e.put("components/databaseSelector/databaseSelector.html",'<div style="visibility: hidden">\r\n    <div class="md-dialog-container" id="dbSelectorDialog">\r\n        <md-dialog aria-label="List dialog" layout-padding="">\r\n            <strong style="text-align: center">Select a Database to view:</strong>\r\n            <md-list layout="column" flex>\r\n                <md-list-item flex ng-repeat="(key, value) in vm.dbList">\r\n                    <md-button flex ng-click="vm.selectDB(key)">\r\n                        {{key}}\r\n                    </md-button>\r\n                </md-list-item>\r\n            </md-list>\r\n        </md-dialog>\r\n    </div>\r\n</div>'),e.put("components/databaseTreeView/databaseTreeView.html",'<div layout="column" layout-fill="">\r\n    <md-toolbar layout="row" md-scroll-shrink="">\r\n        <div class="md-toolbar-tools">\r\n            <md-button class="no-min" ng-click="vm.toggleSidebar()">\r\n                <md-icon md-font-set="material-icons">chevron_left</md-icon>\r\n            </md-button>\r\n\r\n            <h5>Navigation</h5>\r\n        </div>\r\n    </md-toolbar>\r\n\r\n    <md-toolbar class="md-primary md-hue-2" layout="row" md-scroll-shrink="">\r\n        <div class="md-toolbar-tools small-padding">\r\n            <md-input-container>\r\n                <md-icon md-font-set="material-icons">search</md-icon>\r\n                <input type="text" placeholder="Search" ng-trim="true" ng-model="vm.searchText">\r\n            </md-input-container>\r\n        </div>\r\n    </md-toolbar>\r\n\r\n    <md-content>\r\n        <section ng-if="vm.database.Tables">\r\n            <md-subheader class="md-primary accordion-button" ng-class="vm.showTables ? \'md-primary\' : \'db-negative\'" ng-click="vm.showTables = !vm.showTables">\r\n                <span>          \r\n                    <md-icon ng-class="vm.showTables ? \'md-primary\' : \'db-negative\'" md-font-set="material-icons">view_list</md-icon>\r\n                    <span>Tables</span>\r\n                <span>\r\n                <span class="accordion-status">\r\n                    <md-icon ng-show="vm.showTables" class="md-primary" md-font-set="material-icons">keyboard_arrow_down</md-icon>\r\n                    <md-icon ng-class="vm.showTables ? \'md-primary\' : \'db-negative\'" ng-show="!vm.showTables" md-font-set="material-icons">keyboard_arrow_right</md-icon>\r\n                </span>\r\n            </span></span></md-subheader>\r\n\r\n            <md-list flex ng-show="vm.showTables">\r\n                <md-list-item flex ng-repeat="table in vm.database.Tables | filter:vm.searchText | orderBy: \'FullName\'">\r\n                    <md-button ng-click="vm.selectSideBarItem(\'/tables/\', table.FullName)">\r\n                        <span>[{{table.SchemaName}}].[{{table.Name}}]</span>\r\n                    </md-button>\r\n                </md-list-item>\r\n            </md-list>\r\n        </section>\r\n\r\n        <section ng-if="vm.database.Views">\r\n            <md-subheader class="accordion-button" ng-class="vm.showViews ? \'md-primary\' : \'db-negative\'" ng-click="vm.showViews = !vm.showViews">\r\n                <span>\r\n                    <md-icon ng-class="vm.showViews ? \'md-primary\' : \'db-negative\'" md-font-set="material-icons">view_quilt</md-icon> \r\n                    <span>Views</span>\r\n                </span>\r\n                <span class="accordion-status">\r\n                    <md-icon ng-show="vm.showViews" class="md-primary" md-font-set="material-icons">keyboard_arrow_down</md-icon>\r\n                    <md-icon ng-class="vm.showViews ? \'md-primary\' : \'db-negative\'" ng-show="!vm.showViews" md-font-set="material-icons">keyboard_arrow_right</md-icon>\r\n                </span>\r\n            </md-subheader>\r\n\r\n            <md-list flex ng-show="vm.showViews">\r\n                <md-list-item flex ng-repeat="view in vm.database.Views | filter:vm.searchText | orderBy: \'FullName\'">\r\n                    <md-button ng-click="vm.selectSideBarItem(\'/views/\', view.FullName)">\r\n                        <span>[{{view.SchemaName}}].[{{view.Name}}]</span>\r\n                    </md-button>\r\n                </md-list-item>\r\n            </md-list>\r\n        </section>\r\n\r\n        <section ng-if="vm.database.Programmability.StoredProcedures">\r\n            <md-subheader class="accordion-button" ng-class="vm.showProcedures ? \'md-primary\' : \'db-negative\'" ng-click="vm.showProcedures = !vm.showProcedures">\r\n                <span>\r\n                    <md-icon ng-class="vm.showProcedures ? \'md-primary\' : \'db-negative\'" md-font-set="material-icons">settings_ethernet</md-icon> \r\n                    <span>Stored Procedures</span>\r\n                </span>\r\n                <span class="accordion-status">\r\n                    <md-icon ng-show="vm.showProcedures" class="md-primary" md-font-set="material-icons">keyboard_arrow_down</md-icon>\r\n                    <md-icon ng-show="!vm.showProcedures" ng-class="vm.showProcedures ? \'md-primary\' : \'db-negative\'" md-font-set="material-icons">keyboard_arrow_right</md-icon>\r\n                </span>\r\n            </md-subheader>\r\n\r\n            <md-list flex ng-show="vm.showProcedures">\r\n                <md-list-item flex ng-repeat="proc in vm.database.Programmability.StoredProcedures | filter:vm.searchText | orderBy: \'FullName\'">\r\n                    <md-button ng-click="vm.selectSideBarItem(\'/storedprocedures/\', proc.FullName)">\r\n                        <span>[{{proc.SchemaName}}].[{{proc.Name}}]</span>\r\n                    </md-button>\r\n                </md-list-item>\r\n            </md-list>\r\n        </section>\r\n\r\n        <section ng-if="vm.database.Programmability.Functions">\r\n            <md-subheader class="accordion-button" ng-class="vm.showFunctions ? \'md-primary\' : \'db-negative\'" ng-click="vm.showFunctions = !vm.showFunctions">\r\n                <span>\r\n                    <md-icon ng-class="vm.showFunctions ? \'md-primary\' : \'db-negative\'" md-font-set="material-icons">code</md-icon> \r\n                    <span>Functions</span>\r\n                </span>\r\n                <span class="accordion-status">\r\n                    <md-icon ng-show="vm.showFunctions" class="md-primary" md-font-set="material-icons">keyboard_arrow_down</md-icon>\r\n                    <md-icon ng-show="!vm.showFunctions" ng-class="vm.showFunctions ? \'md-primary\' : \'db-negative\'" md-font-set="material-icons">keyboard_arrow_right</md-icon>\r\n                </span>\r\n            </md-subheader>\r\n\r\n            <md-list flex ng-show="vm.showFunctions">\r\n                <md-list-item flex ng-repeat="func in vm.database.Programmability.Functions | filter:vm.searchText | orderBy: \'FullName\'">\r\n                    <md-button ng-click="vm.selectSideBarItem(\'/functions/\', func.FullName)">\r\n                        <span>[{{func.SchemaName}}].[{{func.Name}}]</span>\r\n                    </md-button>\r\n                </md-list-item>\r\n            </md-list>\r\n        </section>\r\n    </md-content>\r\n</div>'),e.put("components/datatable/datatable.html",'<md-table-container>\r\n    <table md-table>\r\n        <thead md-head>\r\n            <tr md-row>\r\n                <th md-column ng-repeat="col in vm.columnNames">\r\n                    {{ col | columnFormatter }}\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody md-body ng-switch="vm.dataType">\r\n\r\n            <tr md-row ng-switch-when="[object Object]" ng-repeat="(key, value) in vm.rowData">\r\n\r\n                <td md-cell>\r\n                    {{ key }}\r\n                </td>\r\n\r\n                <td md-cell>\r\n                    <span ng-if="(!key.toLowerCase().startsWith(\'is\') && (key.toLowerCase() != \'link\'))">\r\n                        {{ vm.rowData[key] | dataFormatter }}\r\n                    </span>\r\n\r\n                    <div ng-if="key.toLowerCase().startsWith(\'is\')">\r\n                        <div ng-if="vm.replaceBoolWithIcon">\r\n                            <span ng-if="((vm.truthyVals.indexOf(vm.rowData[key].toString().toLowerCase()) === -1) && (vm.falseyVals.indexOf(vm.rowData[key].toString().toLowerCase()) === -1))">  \r\n                                {{ vm.rowData[key] | dataFormatter}}\r\n                            </span>\r\n\r\n                            <span ng-if="(vm.falseyVals.indexOf(vm.rowData[key].toString().toLowerCase()) >= 0)">\r\n                                <md-icon md-font-set="material-icons" class="db-negative">cancel</md-icon>\r\n                            </span>\r\n\r\n                            <span ng-if="(vm.truthyVals.indexOf(vm.rowData[key].toString().toLowerCase()) >= 0)">\r\n                                <md-icon md-font-set="material-icons" style="color: rgb(0,150,136)">check_circle</md-icon>\r\n                            <span>\r\n                        </span></span></div>\r\n                    </div>\r\n\r\n                    <div ng-if="key.toLowerCase() == \'link\' && vm.replaceLinkWithHref">\r\n                        <md-button ng-click="vm.redirectTo(vm.rowData[key])">\r\n                           View \r\n                        </md-button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr md-row ng-switch-when="[object Array]" ng-repeat="row in vm.rowData">\r\n\r\n                <td md-cell ng-repeat="col in vm.columnNames">\r\n\r\n                    <span ng-if="(!col.toLowerCase().startsWith(\'is\') && (col.toLowerCase() != \'link\'))">\r\n                        {{ row[col] | dataFormatter }}\r\n                    </span>\r\n\r\n                    <div ng-if="col.toLowerCase().startsWith(\'is\')">\r\n                        <div ng-if="vm.replaceBoolWithIcon">\r\n                            <span ng-if="((vm.truthyVals.indexOf(row[col].toString().toLowerCase()) === -1) && (vm.falseyVals.indexOf(row[col].toString().toLowerCase()) === -1))">  \r\n                                {{ row[col] | dataFormatter}}\r\n                            </span>\r\n\r\n                            <span ng-if="(vm.falseyVals.indexOf(row[col].toString().toLowerCase()) >= 0)">\r\n                                <md-icon md-font-set="material-icons" class="db-negative">cancel</md-icon>\r\n                            </span>\r\n\r\n                            <span ng-if="(vm.truthyVals.indexOf(row[col].toString().toLowerCase()) >= 0)">\r\n                                <md-icon md-font-set="material-icons" style="color: rgb(0,150,136)">check_circle</md-icon>\r\n                            <span>\r\n                        </span></span></div>\r\n                    </div>\r\n\r\n                    <div ng-if="col.toLowerCase() == \'link\' && vm.replaceLinkWithHref">\r\n                        <md-button ng-click="vm.redirectTo(row[col])">\r\n                            View \r\n                        </md-button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            \r\n        </tbody>\r\n    </table>\r\n</md-table-container>'),e.put("components/dbDocReader/dbDocReader.html",'<div layout="column" layout-fill>\r\n    <md-toolbar layout="row">\r\n        <div class="md-toolbar-tools">\r\n            <!-- Left Side -->\r\n            <md-button ngdisabled="!vm.database" class="no-min" ng-click="vm.toggleSidebar()">\r\n                <md-icon md-font-set="material-icons">menu</md-icon>\r\n            </md-button>\r\n\r\n            <h4 md-truncate flex>DBDOC Reader</h4>\r\n            <!-- End Left Side -->\r\n\r\n            <!-- Central Space -->\r\n            <span flex></span>\r\n            <!-- End Central Space -->\r\n\r\n            <!-- Right Side -->\r\n            <div layout="row" ng-if="vm.database">\r\n                <md-button class="no-min no-margin" ng-click="vm.redirectTo(vm.database.Name)" aria-label="Documentation">\r\n                    <md-tooltip>Documentation</md-tooltip>\r\n                    <md-icon md-font-set="material-icons">import_contacts</md-icon>\r\n                </md-button>\r\n               \r\n                <md-button ng-click="vm.redirectTo(\'\')" class="no-min no-margin" aria-label="Select Database">\r\n                    <md-tooltip>Select Database</md-tooltip>\r\n                    <md-icon md-font-set="material-icons">storage</md-icon>\r\n                </md-button>\r\n            </div>\r\n            <!-- End Right Side -->\r\n        </div>\r\n    </md-toolbar>\r\n\r\n    <div flex layout="row">\r\n        <md-sidenav ng-if="vm.database" md-component-id="sidebar" class="md-sidenav-left">\r\n            <database-tree-view database="vm.database">\r\n            </database-tree-view>\r\n        </md-sidenav>\r\n\r\n        <md-content flex layout-fill>\r\n            <div app-view-segment="1"></div>\r\n        </md-content>\r\n    </div>\r\n</div>'),e.put("routeViews/dbFunctions/dbFunction.html",'<md-toolbar class="md-primary md-hue-2">\r\n    <div class="md-toolbar-tools">\r\n        <h3>\r\n            <md-icon md-font-set="material-icons" tooltip="Function" aria-label="Function">\r\n                code\r\n            </md-icon> \r\n            [{{vm.selectedFunction.SchemaName}}].[{{vm.selectedFunction.Name}}]\r\n\r\n            <span ng-if="vm.selectedFunction.Description">\r\n                <md-tooltip>{{vm.selectedFunction.Description}}</md-tooltip>\r\n                 - {{vm.selectedFunction.Description.length > 100 ? \r\n                    vm.selectedFunction.Description.substr(0,100) + \'...\' : vm.selectedFunction.Description}}\r\n            </span>\r\n        </h3>\r\n    </div>\r\n</md-toolbar>\r\n\r\n<md-tabs md-dynamic-height="true" md-stretch-tabs="true" md-selected="1">\r\n    <md-tab ng-show="vm.selectedFunction.Properties != null">\r\n        <md-tab-label>\r\n            {{vm.dtPropertiesTitle}}\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <div layout="row" layout-padding="">\r\n                <div flex="50">\r\n                    <h5>Properties</h5>\r\n                    <datatable column-names="vm.dtPropertiesNames" row-data="vm.selectedFunction.Properties" replace-bool-with-icon="true">    \r\n                    </datatable>\r\n                </div>\r\n\r\n                <div flex="50">\r\n                    <h5>Extended Properties</h5>\r\n                    <datatable column-names="vm.dtPropertiesNames" row-data="vm.selectedFunction.ExtendedProperties" replace-bool-with-icon="true">    \r\n                    </datatable>\r\n                </div>\r\n            </div>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedFunction.Parameters != null">\r\n        <md-tab-label>\r\n            {{vm.dtParametersTitle}} ({{vm.selectedFunction.Parameters.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtParametersNames" row-data="vm.selectedFunction.Parameters" replace-bool-with-icon="true">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedFunction.SqlScript != null">\r\n        <md-tab-label>\r\n            {{vm.dtSQLTitle}}\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <md-content layout-padding="">\r\n                <pre>{{vm.selectedFunction.SqlScript }}</pre>\r\n            </md-content>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedFunction.Uses != null">\r\n        <md-tab-label>\r\n            {{vm.dtUsesTitle}} ({{vm.selectedFunction.Uses.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtUsesNames" row-data="vm.selectedFunction.Uses" replace-bool-with-icon="true" replace-link-with-href="true" database-name="vm.databaseName">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedFunction.UsedBy != null">\r\n        <md-tab-label>\r\n            {{vm.dtUsedByTitle}} ({{vm.selectedFunction.UsedBy.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtUsedByNames" row-data="vm.selectedFunction.UsedBy" replace-bool-with-icon="true" replace-link-with-href="true" database-name="vm.databaseName">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n</md-tabs>'),e.put("routeViews/dbFunctions/dbFunctionsList.html",""),e.put("routeViews/dbProcedures/dbProcedure.html",'<md-toolbar class="md-primary md-hue-2">\r\n    <div class="md-toolbar-tools">\r\n        <h3>\r\n            <md-icon md-font-set="material-icons" tooltip="Table" aria-label="Table">\r\n                settings_ethernet\r\n            </md-icon> \r\n            [{{vm.selectedProcedure.SchemaName}}].[{{vm.selectedProcedure.Name}}]\r\n\r\n            <span ng-if="vm.selectedProcedure.Description">\r\n                <md-tooltip>{{vm.selectedProcedure.Description}}</md-tooltip>\r\n                 - {{vm.selectedProcedure.Description.length > 100 ? \r\n                    vm.selectedProcedure.Description.substr(0,100) + \'...\' : vm.selectedProcedure.Description}}\r\n            </span>\r\n        </h3>\r\n    </div>\r\n</md-toolbar>\r\n\r\n<md-tabs md-dynamic-height="true" md-stretch-tabs="true" md-selected="1">\r\n    <md-tab ng-show="vm.selectedProcedure.Properties != null">\r\n        <md-tab-label>\r\n            {{vm.dtPropertiesTitle}}\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <div layout="row" layout-padding="">\r\n                <div flex="50">\r\n                    <h5>Properties</h5>\r\n                    <datatable column-names="vm.dtPropertiesNames" row-data="vm.selectedProcedure.Properties" replace-bool-with-icon="true">    \r\n                    </datatable>\r\n                </div>\r\n\r\n                <div flex="50">\r\n                    <h5>Extended Properties</h5>\r\n                    <datatable column-names="vm.dtPropertiesNames" row-data="vm.selectedProcedure.ExtendedProperties" replace-bool-with-icon="true">    \r\n                    </datatable>\r\n                </div>\r\n            </div>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedProcedure.Parameters != null">\r\n        <md-tab-label>\r\n            {{vm.dtParametersTitle}} ({{vm.selectedProcedure.Parameters.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtParametersNames" row-data="vm.selectedProcedure.Parameters" replace-bool-with-icon="true">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedProcedure.SqlScript != null">\r\n        <md-tab-label>\r\n            {{vm.dtSQLTitle}}\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <md-content layout-padding="">\r\n                <pre>{{vm.selectedProcedure.SqlScript }}</pre>\r\n            </md-content>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedProcedure.Uses != null">\r\n        <md-tab-label>\r\n            {{vm.dtUsesTitle}} ({{vm.selectedProcedure.Uses.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtUsesNames" row-data="vm.selectedProcedure.Uses" replace-bool-with-icon="true" replace-link-with-href="true" database-name="vm.databaseName">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedProcedure.UsedBy != null">\r\n        <md-tab-label>\r\n            {{vm.dtUsedByTitle}} ({{vm.selectedProcedure.UsedBy.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtUsedByNames" row-data="vm.selectedProcedure.UsedBy" replace-bool-with-icon="true" replace-link-with-href="true" database-name="vm.databaseName">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n</md-tabs>'),
e.put("routeViews/dbProcedures/dbProceduresList.html",""),e.put("routeViews/dbTables/dbTable.html",'<md-toolbar class="md-primary md-hue-2">\r\n    <div class="md-toolbar-tools">\r\n        <h3>\r\n            <md-icon md-font-set="material-icons" tooltip="Table" aria-label="Table">\r\n                view_list\r\n            </md-icon> \r\n            \r\n            [{{vm.selectedTable.SchemaName}}].[{{vm.selectedTable.Name}}] \r\n            <span ng-if="vm.selectedTable.Description">\r\n                <md-tooltip>{{vm.selectedTable.Description}}</md-tooltip>\r\n                 - {{vm.selectedTable.Description.length > 100 ? \r\n                    vm.selectedTable.Description.substr(0,100) + \'...\' : vm.selectedTable.Description}}\r\n            </span>\r\n        </h3>\r\n    </div>\r\n</md-toolbar>\r\n\r\n<md-tabs md-dynamic-height="true" md-stretch-tabs="true" md-selected="1">\r\n    <md-tab ng-show="vm.selectedTable.Properties != null">\r\n        <md-tab-label>\r\n            {{vm.dtPropertiesTitle}}\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <div layout="row" layout-padding="">\r\n                <div flex="50">\r\n                    <h5>Properties</h5>\r\n                    <datatable column-names="vm.dtPropertiesNames" row-data="vm.selectedTable.Properties" replace-bool-with-icon="true">    \r\n                    </datatable>\r\n                </div>\r\n\r\n                <div flex="50">\r\n                    <h5>Extended Properties</h5>\r\n                    <datatable column-names="vm.dtPropertiesNames" row-data="vm.selectedTable.ExtendedProperties" replace-bool-with-icon="true">    \r\n                    </datatable>\r\n                </div>\r\n            </div>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedTable.Columns != null">\r\n        <md-tab-label>\r\n            {{vm.dtColumnsTitle}} ({{vm.selectedTable.Columns.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtColumnsNames" row-data="vm.selectedTable.Columns" replace-bool-with-icon="true">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedTable.Indexes != null">\r\n        <md-tab-label>\r\n            {{vm.dtIndexesTitle}} ({{vm.selectedTable.Indexes.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtIndexesNames" row-data="vm.selectedTable.Indexes" replace-bool-with-icon="true">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedTable.Triggers != null">\r\n        <md-tab-label>\r\n            {{vm.dtTriggersTitle}} ({{vm.selectedTable.Triggers.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtTriggerNames" row-data="vm.selectedTable.Triggers" replace-bool-with-icon="true">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedTable.SqlScript != null">\r\n        <md-tab-label>\r\n            {{vm.dtSQLTitle}}\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <md-content layout-padding="">\r\n                <pre>{{vm.selectedTable.SqlScript }}</pre>\r\n            </md-content>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedTable.Uses != null">\r\n        <md-tab-label>\r\n            {{vm.dtUsesTitle}} ({{vm.selectedTable.Uses.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtUsesNames" row-data="vm.selectedTable.Uses" replace-bool-with-icon="true" replace-link-with-href="true" database-name="vm.databaseName">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedTable.UsedBy != null">\r\n        <md-tab-label>\r\n            {{vm.dtUsedByTitle}} ({{vm.selectedTable.UsedBy.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtUsedByNames" row-data="vm.selectedTable.UsedBy" replace-bool-with-icon="true" replace-link-with-href="true" database-name="vm.databaseName">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n</md-tabs>'),e.put("routeViews/dbTables/dbTablesList.html","<p>Tables list</p>"),e.put("routeViews/dbViews/dbView.html",'<md-toolbar class="md-primary md-hue-2">\r\n    <div class="md-toolbar-tools">\r\n        <h3>\r\n            <md-icon md-font-set="material-icons" tooltip="View" aria-label="View">\r\n                view_quilt\r\n            </md-icon> \r\n            [{{vm.selectedView.SchemaName}}].[{{vm.selectedView.Name}}]\r\n            \r\n            <span ng-if="vm.selectedView.Description">\r\n                <md-tooltip>{{vm.selectedView.Description}}</md-tooltip>\r\n                 - {{vm.selectedView.Description.length > 100 ? \r\n                    vm.selectedView.Description.substr(0,100) + \'...\' : vm.selectedView.Description}}\r\n            </span>\r\n\r\n        </h3>\r\n    </div>\r\n</md-toolbar>\r\n\r\n<md-tabs md-dynamic-height="true" md-stretch-tabs="true" md-selected="1">\r\n    <md-tab ng-show="vm.selectedView.Properties != null">\r\n        <md-tab-label>\r\n            {{vm.dtPropertiesTitle}}\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <div layout="row" layout-padding="">\r\n                <div flex="50">\r\n                    <h5>Properties</h5>\r\n                    <datatable column-names="vm.dtPropertiesNames" row-data="vm.selectedView.Properties" replace-bool-with-icon="true">    \r\n                    </datatable>\r\n                </div>\r\n\r\n                <div flex="50">\r\n                    <h5>Extended Properties</h5>\r\n                    <datatable column-names="vm.dtPropertiesNames" row-data="vm.selectedView.ExtendedProperties" replace-bool-with-icon="true">    \r\n                    </datatable>\r\n                </div>\r\n            </div>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedView.Columns != null">\r\n        <md-tab-label>\r\n            {{vm.dtColumnsTitle}} ({{vm.selectedView.Columns.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtColumnsNames" row-data="vm.selectedView.Columns" replace-bool-with-icon="true">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedView.Indexes != null">\r\n        <md-tab-label>\r\n            {{vm.dtIndexesTitle}} ({{vm.selectedView.Indexes.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtIndexesNames" row-data="vm.selectedView.Indexes" replace-bool-with-icon="true">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedView.SqlScript != null">\r\n        <md-tab-label>\r\n            {{vm.dtSQLTitle}}\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <md-content layout-padding="">\r\n                <pre>{{vm.selectedView.SqlScript }}</pre>\r\n            </md-content>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedView.Uses != null">\r\n        <md-tab-label>\r\n            {{vm.dtUsesTitle}} ({{vm.selectedView.Uses.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtUsesNames" row-data="vm.selectedView.Uses" replace-bool-with-icon="true" replace-link-with-href="true" database-name="vm.databaseName">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n\r\n    <md-tab ng-show="vm.selectedView.UsedBy != null">\r\n        <md-tab-label>\r\n            {{vm.dtUsedByTitle}} ({{vm.selectedView.UsedBy.length}})\r\n        </md-tab-label>\r\n        <md-tab-body>\r\n            <datatable column-names="vm.dtUsedByNames" row-data="vm.selectedView.UsedBy" replace-bool-with-icon="true" replace-link-with-href="true" database-name="vm.databaseName">    \r\n            </datatable>\r\n        </md-tab-body>\r\n    </md-tab>\r\n</md-tabs>'),e.put("routeViews/dbViews/dbViewsList.html","")}]);